{"ast":null,"code":"var _jsxFileName = \"/Users/Shared/Previously Relocated Items/Security/work /\\u524D\\u7AEF/web projects/github-finder/src/components/users/Users.js\";\nimport React, { Component } from 'react';\nimport UserItem from './UserItem';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Users = ({\n  users,\n  loading\n}) => {\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 20\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: userStyle,\n      children: users.map(user => /*#__PURE__*/_jsxDEV(UserItem, {\n        user: user\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 18\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_c = Users;\nUsers.propTypes = {\n  users: PropTypes.array.isRequired,\n  Loading: PropTypes.bool.isRequired\n};\nconst userStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(3, 1fr)',\n  gridGap: '1rem'\n};\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/Shared/Previously Relocated Items/Security/work /前端/web projects/github-finder/src/components/users/Users.js"],"names":["React","Component","UserItem","Spinner","PropTypes","Users","users","loading","userStyle","map","user","id","propTypes","array","isRequired","Loading","bool","display","gridTemplateColumns","gridGap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAsB;AAC5B,MAAGA,OAAH,EAAW;AACP,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEK;AACD,wBACA;AAAK,MAAA,KAAK,EAAIC,SAAd;AAAA,gBACKF,KAAK,CAACG,GAAN,CAAUC,IAAI,iBACd,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,cADA;AADL;AAAA;AAAA;AAAA;AAAA,YADA;AAMF;AACL,CAXL;;KAAMN,K;AAaNA,KAAK,CAACO,SAAN,GAAkB;AACdN,EAAAA,KAAK,EAAEF,SAAS,CAACS,KAAV,CAAgBC,UADT;AAEdC,EAAAA,OAAO,EAAEX,SAAS,CAACY,IAAV,CAAeF;AAFV,CAAlB;AAKA,MAAMN,SAAS,GAAG;AACdS,EAAAA,OAAO,EAAE,MADK;AAEdC,EAAAA,mBAAmB,EAAE,gBAFP;AAGdC,EAAAA,OAAO,EAAE;AAHK,CAAlB;AAMA,eAAed,KAAf","sourcesContent":["import React, { Component } from 'react'\nimport UserItem from './UserItem'\nimport Spinner from '../layout/Spinner'\nimport PropTypes from 'prop-types'\n\n\nconst Users = ({users, loading}) => {\n        if(loading){\n            return <Spinner/>\n        }else{\n            return (\n            <div style = {userStyle}>\n                {users.map(user =>\n                (<UserItem key={user.id} user={user}/>\n                ))}\n            </div>\n        )}\n    }\n\nUsers.propTypes = {\n    users: PropTypes.array.isRequired,\n    Loading: PropTypes.bool.isRequired\n}\n\nconst userStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    gridGap: '1rem'\n}\n\nexport default Users\n"]},"metadata":{},"sourceType":"module"}