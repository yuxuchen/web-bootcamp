{"ast":null,"code":"import React,{useContext}from'react';import UserItem from'./UserItem';import Spinner from'../layout/Spinner';import GithubContext from'../../context/github/GithubContext';import{jsx as _jsx}from\"react/jsx-runtime\";var Users=function Users(){var githubContext=useContext(GithubContext);var loading=githubContext.loading,users=githubContext.users;if(loading){return/*#__PURE__*/_jsx(Spinner,{});}else{return/*#__PURE__*/_jsx(\"div\",{style:userStyle,children:users.map(function(user){return/*#__PURE__*/_jsx(UserItem,{user:user},user.id);})});}};var userStyle={display:'grid',gridTemplateColumns:'repeat(3, 1fr)',gridGap:'1rem'};export default Users;","map":{"version":3,"sources":["/Users/Shared/Previously Relocated Items/Security/work /前端/web projects/github-finder/src/components/users/Users.js"],"names":["React","useContext","UserItem","Spinner","GithubContext","Users","githubContext","loading","users","userStyle","map","user","id","display","gridTemplateColumns","gridGap"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,UAAf,KAAgC,OAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,aAAP,KAA0B,oCAA1B,C,2CAGA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAChB,GAAMC,CAAAA,aAAa,CAAGL,UAAU,CAACG,aAAD,CAAhC,CACA,GAAOG,CAAAA,OAAP,CAAyBD,aAAzB,CAAOC,OAAP,CAAgBC,KAAhB,CAAyBF,aAAzB,CAAgBE,KAAhB,CACI,GAAGD,OAAH,CAAW,CACP,mBAAO,KAAC,OAAD,IAAP,CACH,CAFD,IAEK,CACD,mBACA,YAAK,KAAK,CAAIE,SAAd,UACKD,KAAK,CAACE,GAAN,CAAU,SAAAC,IAAI,qBACd,KAAC,QAAD,EAAwB,IAAI,CAAEA,IAA9B,EAAeA,IAAI,CAACC,EAApB,CADc,EAAd,CADL,EADA,CAMF,CACL,CAbL,CAgBA,GAAMH,CAAAA,SAAS,CAAG,CACdI,OAAO,CAAE,MADK,CAEdC,mBAAmB,CAAE,gBAFP,CAGdC,OAAO,CAAE,MAHK,CAAlB,CAMA,cAAeV,CAAAA,KAAf","sourcesContent":["import React, {useContext} from 'react'\nimport UserItem from './UserItem'\nimport Spinner from '../layout/Spinner'\nimport GithubContext from '../../context/github/GithubContext';\n\n\nconst Users = () => {\n    const githubContext = useContext(GithubContext)\n    const {loading, users} = githubContext;\n        if(loading){\n            return <Spinner/>\n        }else{\n            return (\n            <div style = {userStyle}>\n                {users.map(user =>\n                (<UserItem key={user.id} user={user}/>\n                ))}\n            </div>\n        )}\n    }\n\n\nconst userStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    gridGap: '1rem'\n}\n\nexport default Users\n"]},"metadata":{},"sourceType":"module"}