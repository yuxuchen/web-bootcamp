{"ast":null,"code":"var _jsxFileName = \"/Users/Shared/Previously Relocated Items/Security/work /\\u524D\\u7AEF/web projects/github-finder/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport About from './components/pages/About';\nimport './App.css';\nimport axios from 'axios';\nimport Alert from './components/layout/Alert';\nimport GithubState from './context/github/GithubState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null); //Search github users\n  // Get single Github User\n  //Get user repos\n\n  const getUserRepos = async username => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=$\n        {process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=$\n        {process.env.REACT_APP_GITHUB_CLIENT_SECRET}`); //res.data for the single user\n\n    setLoading(false);\n    setRepos(res.data);\n  }; //Set alert\n\n\n  const showAlert = (msg, type) => {\n    setAlert = {\n      msg,\n      type\n    };\n    setTimeout(() => setAlert(null), 5000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(GithubState, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Alert, {\n            alert: alert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              render: props => /*#__PURE__*/_jsxDEV(Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Search, {\n                  clearUsers: clearUsers,\n                  showClear: users.length > 0 ? true : false,\n                  setAlert: showAlert\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 30\n                }, this), /*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 30\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/about\",\n              component: About\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/user/:login\",\n              render: props => /*#__PURE__*/_jsxDEV(User, { ...props,\n                getUser: getUser,\n                getUserRepos: getUserRepos,\n                user: user,\n                repos: repos,\n                loading: loading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 13\n  }, this);\n};\n\n_s(App, \"38cu+SSJT+Qfwyt1LrNYAj60zDM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Shared/Previously Relocated Items/Security/work /前端/web projects/github-finder/src/App.js"],"names":["React","Fragment","useState","Navbar","Users","User","Search","BrowserRouter","Router","Switch","Route","About","axios","Alert","GithubState","App","user","setUser","repos","setRepos","loading","setLoading","alert","setAlert","getUserRepos","username","res","get","data","showAlert","msg","type","setTimeout","props","clearUsers","users","length","getUser"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from 'react';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport About from './components/pages/About'\nimport './App.css';\nimport axios from 'axios'\nimport Alert from './components/layout/Alert'\n\nimport GithubState from './context/github/GithubState';\n\nconst App = () => { \n    const [user, setUser] = useState({});\n    const [repos, setRepos] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [alert, setAlert] = useState(null);\n\n    //Search github users\n\n\n    // Get single Github User\n\n    //Get user repos\nconst getUserRepos = async (username) =>{\n        setLoading(true)\n        const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=$\n        {process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=$\n        {process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n        //res.data for the single user\n        setLoading(false);\n        setRepos(res.data);\n    }\n\n\n\n    //Set alert\nconst showAlert = (msg, type) => {\n        setAlert = ({msg, type})\n        setTimeout(()=> setAlert(null), 5000 )\n    }\n        \n        return(\n            <GithubState>\n            <Router>\n            <div className = 'App'>\n              <Navbar/>\n              <div className='container'>\n                <Alert alert={alert} />\n                <Switch>\n                    <Route exact path='/' render = {props =>(\n                        <Fragment>\n                             <Search \n                                clearUsers = {clearUsers} \n                                showClear = {users.length>0 ? true: false} \n                                setAlert = {showAlert}\n                                />\n                             <Users/>\n                        </Fragment>\n                    )} />\n                    <Route exact path = '/about' component = {About}/>\n                    <Route exact path = '/user/:login' render={props =>(\n                        < User \n                        {...props} \n                        getUser = {getUser} \n                        getUserRepos={getUserRepos} \n                        user={user}\n                        repos = {repos}\n                        loading = {loading} \n                        />\n                    )}/>\n                </Switch>\n             </div>\n           </div>\n           </Router>\n           </GithubState>\n        )\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}