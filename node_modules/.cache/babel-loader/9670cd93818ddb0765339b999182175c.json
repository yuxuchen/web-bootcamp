{"ast":null,"code":"var _jsxFileName = \"/Users/Shared/Previously Relocated Items/Security/work /\\u524D\\u7AEF/web projects/github-finder/src/App.js\";\nimport React, { Fragment, Component } from 'react';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport Search from './components/users/Search';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport About from './';\nimport './App.css';\nimport axios from 'axios';\nimport Alert from './components/layout/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      loading: false,\n      alert: null\n    };\n\n    this.searchUsers = async text => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=$\n        {process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=$\n        {process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      this.setState({\n        users: res.data.items,\n        loading: false\n      });\n    };\n\n    this.clearUsers = () => this.setState({\n      users: [],\n      loading: false\n    });\n\n    this.setAlert = (msg, type) => {\n      this.setState({\n        alert: {\n          msg,\n          type\n        }\n      });\n      setTimeout(() => this.setState({\n        alert: null\n      }), 5000);\n    };\n  }\n\n  render() {\n    const {\n      users,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Alert, {\n            alert: this.state.alert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              render: props => /*#__PURE__*/_jsxDEV(Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Search, {\n                  searchUsers: this.searchUsers,\n                  clearUsers: this.clearUsers,\n                  showClear: users.length > 0 ? true : false,\n                  setAlert: this.setAlert\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 30\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Users, {\n            loading: loading,\n            users: users\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Shared/Previously Relocated Items/Security/work /前端/web projects/github-finder/src/App.js"],"names":["React","Fragment","Component","Navbar","Users","Search","BrowserRouter","Router","Switch","Route","About","axios","Alert","App","state","users","loading","alert","searchUsers","text","setState","res","get","data","items","clearUsers","setAlert","msg","type","setTimeout","render","props","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,MAAjC,EAAyCC,KAAzC,QAAqD,kBAArD;AACA,OAAOC,KAAP,MAAkB,IAAlB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;;AAEA,MAAMC,GAAN,SAAkBX,SAAlB,CAA2B;AAAA;AAAA;AAAA,SACvBY,KADuB,GACf;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,OAAO,EAAE,KAFL;AAGJC,MAAAA,KAAK,EAAE;AAHH,KADe;;AAAA,SAgBvBC,WAhBuB,GAgBT,MAAMC,IAAN,IAAY;AACtB,WAAKC,QAAL,CAAc;AAACJ,QAAAA,OAAO,EAAE;AAAV,OAAd;AACA,YAAMK,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,yCAAwCH,IAAK;AAClF;AACA,qDAF0B,CAAlB;AAGA,WAAKC,QAAL,CAAc;AAACL,QAAAA,KAAK,EAAEM,GAAG,CAACE,IAAJ,CAASC,KAAjB;AAAwBR,QAAAA,OAAO,EAAE;AAAjC,OAAd;AACC,KAtBkB;;AAAA,SAwBvBS,UAxBuB,GAwBV,MAAM,KAAKL,QAAL,CAAc;AAACL,MAAAA,KAAK,EAAC,EAAP;AAAWC,MAAAA,OAAO,EAAE;AAApB,KAAd,CAxBI;;AAAA,SA2BvBU,QA3BuB,GA2BZ,CAACC,GAAD,EAAMC,IAAN,KAAe;AACtB,WAAKR,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAC;AAACU,UAAAA,GAAD;AAAMC,UAAAA;AAAN;AAAP,OAAd;AACAC,MAAAA,UAAU,CAAC,MAAK,KAAKT,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAC;AAAP,OAAd,CAAN,EAAmC,IAAnC,CAAV;AACH,KA9BsB;AAAA;;AAgCvBa,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACf,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAoB,KAAKF,KAA/B;AACA,wBACI,QAAC,MAAD;AAAA,6BACA;AAAK,QAAA,SAAS,EAAG,KAAjB;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,KAAK,EAAE,KAAKA,KAAL,CAAWG;AAAzB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AAAA,mCACI,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,GAAlB;AAAsB,cAAA,MAAM,EAAIc,KAAK,iBACjC,QAAC,QAAD;AAAA,uCACK,QAAC,MAAD;AACG,kBAAA,WAAW,EAAI,KAAKb,WADvB;AAEG,kBAAA,UAAU,EAAI,KAAKO,UAFtB;AAGG,kBAAA,SAAS,EAAIV,KAAK,CAACiB,MAAN,GAAa,CAAb,GAAiB,IAAjB,GAAuB,KAHvC;AAIG,kBAAA,QAAQ,EAAI,KAAKN;AAJpB;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFF,eAcA,QAAC,KAAD;AAAO,YAAA,OAAO,EAAEV,OAAhB;AAAyB,YAAA,KAAK,EAAID;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAdA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ;AAuBH;;AAzDsB;;AA2D3B,eAAeF,GAAf","sourcesContent":["import React, {Fragment, Component} from 'react';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport Search from './components/users/Search';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport About from './'\nimport './App.css';\nimport axios from 'axios'\nimport Alert from './components/layout/Alert'\n\nclass App extends Component{\n    state = {\n        users: [],\n        loading: false,\n        alert: null\n    }\n    // async componentDidMount(){\n    //     console.log(process.env.REACT_APP_GITHUB_CLIENT_ID)\n    //     this.setState({loading: true})\n    //     const res = await axios.get(`https://api.github.com/users?client_id=$\n    //     {process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=$\n    //     {process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    //     this.setState({users: res.data, loading: false});\n    // }\n\n    //Search github users\n    searchUsers = async text=>{\n        this.setState({loading: true})\n        const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=$\n        {process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=$\n        {process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n        this.setState({users: res.data.items, loading: false});\n        }\n    //Clear users from state\n    clearUsers = () => this.setState({users:[], loading: false})\n\n    //Set alert\n    setAlert = (msg, type) => {\n        this.setState({alert:{msg, type}})\n        setTimeout(()=> this.setState({alert:null}), 5000 )\n    }\n\n    render(){\n        const {users, loading } = this.state\n        return(\n            <Router>\n            <div className = 'App'>\n              <Navbar/>\n              <div className='container'>\n                <Alert alert={this.state.alert} />\n                <Switch>\n                    <Route exact path='/' render = {props =>(\n                        <Fragment>\n                             <Search \n                                searchUsers = {this.searchUsers} \n                                clearUsers = {this.clearUsers} \n                                showClear = {users.length>0 ? true: false} \n                                setAlert = {this.setAlert}\n                                />\n                        </Fragment>\n                    )} />\n                </Switch>\n              <Users loading={loading} users = {users}/>\n             </div>\n           </div>\n           </Router>\n        )\n    }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}