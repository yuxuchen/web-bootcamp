{"ast":null,"code":"import React,{Fragment,useEffect,useContext}from'react';import Spinner from'../layout/Spinner';import{Repos}from'../repos/Repos';import{Link}from'react-router-dom';import GithubContext from'../../context/github/GithubContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var User=function User(_ref){var match=_ref.match;var githubContext=useContext(GithubContext);var getUser=githubContext.getUser,loading=githubContext.loading,user=githubContext.user,repos=githubContext.repos,getUserRepos=githubContext.getUserRepos;useEffect(function(){getUser(match.params.login);getUserRepos(match.params.login);},[]);var name=user.name,avatar_url=user.avatar_url,location=user.location,company=user.company,bio=user.bio,blog=user.blog,login=user.login,html_url=user.html_url,followers=user.followers,following=user.following,public_repos=user.public_repos,public_gists=user.public_gists,hireable=user.hireable;//when state changes, the function render will rerender.\n//alt replace the text when image cannot be seen.\nreturn loading?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"btn btn-light\",children:\"Back To Search\"}),\"Hireable: \",' ',hireable?/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-check text-success\"}):/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times-circle text-danger\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"card grid-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"all-center\",children:[/*#__PURE__*/_jsx(\"img\",{src:avatar_url,className:\"round-img\",alt:\"\",style:{width:'150px'}}),/*#__PURE__*/_jsx(\"h1\",{children:name}),/*#__PURE__*/_jsx(\"p\",{children:location})]}),/*#__PURE__*/_jsxs(\"div\",{children:[bio&&/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Bio\"}),/*#__PURE__*/_jsx(\"p\",{children:bio})]}),/*#__PURE__*/_jsx(\"a\",{href:html_url,className:\"btn btn-dark my-1\",children:\"Visit Github Profile\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:login&&/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\" Username: \"}),login]})}),/*#__PURE__*/_jsx(\"li\",{children:company&&/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\" Company: \"}),company]})}),/*#__PURE__*/_jsx(\"li\",{children:blog&&/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\" Website: \"}),blog]})})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"badge badge-primary\",children:[\"Followers: \",followers]}),/*#__PURE__*/_jsxs(\"div\",{className:\"badge badge-success\",children:[\"Followers: \",following]}),/*#__PURE__*/_jsxs(\"div\",{className:\"badge badge-light\",children:[\"Public Repos: \",public_repos]}),/*#__PURE__*/_jsxs(\"div\",{className:\"badge badge-dark\",children:[\"Public Gists: \",public_gists]})]}),/*#__PURE__*/_jsx(Repos,{repos:repos})]});};export default User;","map":{"version":3,"sources":["/Users/Shared/Previously Relocated Items/Security/work /前端/web projects/github-finder/src/components/users/User.js"],"names":["React","Fragment","useEffect","useContext","Spinner","Repos","Link","GithubContext","User","match","githubContext","getUser","loading","user","repos","getUserRepos","params","login","name","avatar_url","location","company","bio","blog","html_url","followers","following","public_repos","public_gists","hireable","width"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useContext} from 'react';\nimport Spinner from '../layout/Spinner';\nimport {Repos} from '../repos/Repos';\nimport {Link} from 'react-router-dom';\nimport GithubContext from '../../context/github/GithubContext';\n\nconst User = ({ match }) => {\n    const githubContext = useContext(GithubContext);\n\n    const { getUser, loading, user, repos, getUserRepos } = githubContext;\n\n    useEffect(()=>{\n        getUser(match.params.login);\n        getUserRepos(match.params.login);\n    },[])\n        const {\n            name,\n            avatar_url,\n            location,\n            company,\n            bio,\n            blog,\n            login,\n            html_url,\n            followers,\n            following,\n            public_repos,\n            public_gists,\n            hireable\n        } = user;\n\n        //when state changes, the function render will rerender.\n        //alt replace the text when image cannot be seen.\n        return loading ? (<Spinner/>) \n        : (<Fragment>\n                <Link to='/' className = 'btn btn-light'>\n                    Back To Search\n                </Link>\n                Hireable: {' '} \n                {hireable ? <i className = 'fas fa-check text-success'/> : \n                <i className = 'fas fa-times-circle text-danger'/>}\n                <div className = 'card grid-2'>\n                    <div className= 'all-center'>\n                        <img src = {avatar_url} className ='round-img' alt ='' style={{width: '150px'}} />\n                        <h1>{name}</h1>\n                        <p>{location}</p>\n                    </div>\n                    <div>\n                        {bio && (\n                        <Fragment>\n                            <h3>Bio</h3>\n                            <p>{bio}</p>\n                        </Fragment>\n                        )}\n                        <a href = {html_url} className = 'btn btn-dark my-1'>\n                            Visit Github Profile\n                        </a>\n                        <ul>\n                            <li>\n                                {login && (\n                                    <Fragment>\n                                        <strong> Username: </strong>{login}\n                                    </Fragment>\n                                )}\n                            </li>\n                            <li>\n                                {company && (\n                                    <Fragment>\n                                        <strong> Company: </strong>{company}\n                                    </Fragment>\n                                )}\n                            </li>\n                            <li>\n                                {blog && (\n                                    <Fragment>\n                                        <strong> Website: </strong>{blog}\n                                    </Fragment>\n                                )}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <div className = 'card text-center'>\n                    <div className ='badge badge-primary'>Followers: {followers}</div>\n                    <div className ='badge badge-success'>Followers: {following}</div>\n                    <div className ='badge badge-light'>Public Repos: {public_repos}</div>\n                    <div className ='badge badge-dark'>Public Gists: {public_gists}</div>\n                </div>\n                <Repos repos={repos}/>\n            </Fragment>\n        )\n\n}\n\nexport default User\n\n"]},"metadata":{},"sourceType":"module"}