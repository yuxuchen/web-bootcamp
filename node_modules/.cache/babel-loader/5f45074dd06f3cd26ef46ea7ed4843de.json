{"ast":null,"code":"var _jsxFileName = \"/Users/Shared/Previously Relocated Items/Security/work /\\u524D\\u7AEF/web projects/github-finder/src/components/users/User.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useContext } from 'react';\nimport Spinner from '../layout/Spinner';\nimport { Repos } from '../repos/Repos';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport GithubContext from '../../context/github/githubContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst User = ({\n  getUserRepos,\n  repos,\n  match\n}) => {\n  _s();\n\n  const githubContext = useContext(GithubContext);\n  const {\n    getUser,\n    loading,\n    user\n  } = githubContext;\n  useEffect(() => {\n    getUser(match.params.login);\n    getUserRepos(match.params.login);\n  }, []);\n  const {\n    name,\n    avatar_url,\n    location,\n    company,\n    bio,\n    blog,\n    login,\n    html_url,\n    followers,\n    following,\n    public_repos,\n    public_gists,\n    hireable\n  } = user; //when state changes, the function render will rerender.\n  //alt replace the text when image cannot be seen.\n\n  return loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 27\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"btn btn-light\",\n      children: \"Back To Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), \"Hireable: \", ' ', hireable ? /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-check text-success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-times-circle text-danger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card grid-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar_url,\n          className: \"round-img\",\n          alt: \"\",\n          style: {\n            width: '150px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [bio && /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Bio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: bio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: html_url,\n          className: \"btn btn-dark my-1\",\n          children: \"Visit Github Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: login && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Username: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 41\n              }, this), login]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: company && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Company: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 41\n              }, this), company]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: blog && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Website: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 41\n              }, this), blog]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"badge badge-primary\",\n        children: [\"Followers: \", followers]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"badge badge-success\",\n        children: [\"Followers: \", following]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"badge badge-light\",\n        children: [\"Public Repos: \", public_repos]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"badge badge-dark\",\n        children: [\"Public Gists: \", public_gists]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Repos, {\n      repos: repos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 12\n  }, this);\n};\n\n_s(User, \"B4lOzIkZDDXqM/BHVRC6WJJ3xbo=\");\n\n_c = User;\nUser.propTypes = {\n  loading: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n  repos: PropTypes.array.isRequired,\n  getUser: PropTypes.func.isRequired,\n  getUserRepos: PropTypes.func.isRequired\n};\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/Shared/Previously Relocated Items/Security/work /前端/web projects/github-finder/src/components/users/User.js"],"names":["React","Fragment","useEffect","useContext","Spinner","Repos","PropTypes","Link","GithubContext","User","getUserRepos","repos","match","githubContext","getUser","loading","user","params","login","name","avatar_url","location","company","bio","blog","html_url","followers","following","public_repos","public_gists","hireable","width","propTypes","bool","object","isRequired","array","func"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useContext} from 'react';\nimport Spinner from '../layout/Spinner';\nimport {Repos} from '../repos/Repos';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport GithubContext from '../../context/github/githubContext';\n\nconst User = ({ getUserRepos, repos, match }) => {\n    const githubContext = useContext(GithubContext);\n\n    const { getUser, loading, user } = githubContext\n    useEffect(()=>{\n        getUser(match.params.login);\n        getUserRepos(match.params.login);\n    },[])\n        const {\n            name,\n            avatar_url,\n            location,\n            company,\n            bio,\n            blog,\n            login,\n            html_url,\n            followers,\n            following,\n            public_repos,\n            public_gists,\n            hireable\n        } = user;\n\n        //when state changes, the function render will rerender.\n        //alt replace the text when image cannot be seen.\n        return loading ? (<Spinner/>) \n        : (<Fragment>\n                <Link to='/' className = 'btn btn-light'>\n                    Back To Search\n                </Link>\n                Hireable: {' '} \n                {hireable ? <i className = 'fas fa-check text-success'/> : \n                <i className = 'fas fa-times-circle text-danger'/>}\n                <div className = 'card grid-2'>\n                    <div className= 'all-center'>\n                        <img src = {avatar_url} className ='round-img' alt ='' style={{width: '150px'}} />\n                        <h1>{name}</h1>\n                        <p>{location}</p>\n                    </div>\n                    <div>\n                        {bio && (\n                        <Fragment>\n                            <h3>Bio</h3>\n                            <p>{bio}</p>\n                        </Fragment>\n                        )}\n                        <a href = {html_url} className = 'btn btn-dark my-1'>\n                            Visit Github Profile\n                        </a>\n                        <ul>\n                            <li>\n                                {login && (\n                                    <Fragment>\n                                        <strong> Username: </strong>{login}\n                                    </Fragment>\n                                )}\n                            </li>\n                            <li>\n                                {company && (\n                                    <Fragment>\n                                        <strong> Company: </strong>{company}\n                                    </Fragment>\n                                )}\n                            </li>\n                            <li>\n                                {blog && (\n                                    <Fragment>\n                                        <strong> Website: </strong>{blog}\n                                    </Fragment>\n                                )}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <div className = 'card text-center'>\n                    <div className ='badge badge-primary'>Followers: {followers}</div>\n                    <div className ='badge badge-success'>Followers: {following}</div>\n                    <div className ='badge badge-light'>Public Repos: {public_repos}</div>\n                    <div className ='badge badge-dark'>Public Gists: {public_gists}</div>\n                </div>\n                <Repos repos={repos}/>\n            </Fragment>\n        )\n\n}\n\nUser.propTypes = {\n    loading: PropTypes.bool,\n    user: PropTypes.object.isRequired,\n    repos:PropTypes.array.isRequired,\n    getUser: PropTypes.func.isRequired,\n    getUserRepos: PropTypes.func.isRequired\n}\n\nexport default User\n\n"]},"metadata":{},"sourceType":"module"}