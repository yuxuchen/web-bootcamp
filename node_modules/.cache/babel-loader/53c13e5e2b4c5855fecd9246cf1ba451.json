{"ast":null,"code":"var _jsxFileName = \"/Users/Shared/Previously Relocated Items/Security/work /\\u524D\\u7AEF/web projects/github-finder/src/context/alert/AlertState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport AlertContext from './AlertContext';\nimport AlertReducer from './AlertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlertState = props => {\n  _s();\n\n  const initialState = null;\n  const [state, dispatch] = useReducer(AlertReducer, initialState); //Set alert\n\n  const setAlert = (msg, type) => {\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg,\n        type\n      }\n    });\n    setTimeout(() => dispatch({\n      type: REMOVE_ALERT\n    }), 5000);\n  }; //use provider to pass the state that whole App can use.\n\n\n  return /*#__PURE__*/_jsxDEV(AlertContext.Provider, {\n    value: {\n      alert: state,\n      setAlert\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AlertState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AlertState;\nexport default AlertState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertState\");","map":{"version":3,"sources":["/Users/Shared/Previously Relocated Items/Security/work /前端/web projects/github-finder/src/context/alert/AlertState.js"],"names":["React","useReducer","AlertContext","AlertReducer","SET_ALERT","REMOVE_ALERT","AlertState","props","initialState","state","dispatch","setAlert","msg","type","payload","setTimeout","alert","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SACIC,SADJ,EACeC,YADf,QAEO,UAFP;;;AAIA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA;;AACxB,QAAMC,YAAY,GAAG,IAArB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACE,YAAD,EAAeK,YAAf,CAApC,CAHwB,CAK1B;;AACE,QAAMG,QAAQ,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC9BH,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAET,SADD;AAELU,MAAAA,OAAO,EAAE;AAACF,QAAAA,GAAD;AAAMC,QAAAA;AAAN;AAFJ,KAAD,CAAR;AAIAE,IAAAA,UAAU,CAAC,MAAML,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAER;AAAP,KAAD,CAAf,EAAuC,IAAvC,CAAV;AACD,GAND,CANwB,CAcxB;;;AACA,sBAAO,QAAC,YAAD,CAAc,QAAd;AACH,IAAA,KAAK,EAAI;AACLW,MAAAA,KAAK,EAACP,KADD;AAELE,MAAAA;AAFK,KADN;AAAA,cAMFJ,KAAK,CAACU;AANJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAQH,CAvBD;;GAAMX,U;;KAAAA,U;AAyBN,eAAeA,UAAf","sourcesContent":["import React, {useReducer} from 'react';\nimport AlertContext from './AlertContext';\nimport AlertReducer from './AlertReducer';\nimport {\n    SET_ALERT, REMOVE_ALERT\n} from '../types'\n\nconst AlertState = props => {\n    const initialState = null;\n\n    const [state, dispatch] = useReducer(AlertReducer, initialState);\n\n  //Set alert\n    const setAlert = (msg, type) => {\n      dispatch({\n          type: SET_ALERT,\n          payload: {msg, type}\n      })\n      setTimeout(() => dispatch({type: REMOVE_ALERT}), 5000);\n    }\n\n    //use provider to pass the state that whole App can use.\n    return <AlertContext.Provider\n        value = {{\n            alert:state,\n            setAlert\n        }}\n    >\n        {props.children}\n    </AlertContext.Provider>\n}\n\nexport default AlertState;"]},"metadata":{},"sourceType":"module"}