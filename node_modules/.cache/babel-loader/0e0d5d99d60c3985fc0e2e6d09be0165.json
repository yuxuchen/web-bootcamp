{"ast":null,"code":"import _regeneratorRuntime from\"/Users/Shared/Previously Relocated Items/Security/work /\\u524D\\u7AEF/web projects/github-finder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/Shared/Previously Relocated Items/Security/work /\\u524D\\u7AEF/web projects/github-finder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/Shared/Previously Relocated Items/Security/work /\\u524D\\u7AEF/web projects/github-finder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from'react';import axios from'axios';import GithubContext from'./GithubContext';import GithubReducer from'./GithubReducer';import{SEARCH_USERS,SET_LOADING,CLEAR_USERS,GET_USER,GET_REPOS}from'../types';import{jsx as _jsx}from\"react/jsx-runtime\";var githubClientId;var githubClientSecret;if(process.env.NODE_ENV!=='production'){githubClientId=process.env.REACT_APP_GITHUB_CLIENT_ID;githubClientSecret=process.env.REACT_APP_GITHUB_CLIENT_SECRET;}else{githubClientId=process.env.GITHUB_CLIENT_ID;githubClientSecret=process.env.GITHUB_CLIENT_SECRET;}var GithubState=function GithubState(props){var initialState={users:[],user:{},repos:[],loading:false};var _useReducer=useReducer(GithubReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];//Search Users\nvar searchUsers=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(text){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading();_context.next=3;return axios.get(\"https://api.github.com/search/users?q=\".concat(text,\"&client_id=\").concat(githubClientId,\"&client_secret=\").concat(githubClientSecret));case 3:res=_context.sent;dispatch({type:SEARCH_USERS,payload:res.data.items});case 5:case\"end\":return _context.stop();}}},_callee);}));return function searchUsers(_x){return _ref.apply(this,arguments);};}();//Get User\nvar getUser=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(username){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setLoading();_context2.next=3;return axios.get(\"https://api.github.com/users/\".concat(username,\"?client_id\\n        =\").concat(githubClientId,\"&client_secret=\").concat(githubClientSecret));case 3:res=_context2.sent;dispatch({type:GET_USER,payload:res.data});case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function getUser(_x2){return _ref2.apply(this,arguments);};}();//Get Repos\nvar getUserRepos=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(username){var res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:setLoading();_context3.next=3;return axios.get(\"https://api.github.com/users/\".concat(username,\"/repos?per_page=5&\\n            sort=created:asc&client_id=\").concat(githubClientId,\"&client_secret=\").concat(githubClientSecret));case 3:res=_context3.sent;//res.data for the single user\ndispatch({type:GET_REPOS,payload:res.data});case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function getUserRepos(_x3){return _ref3.apply(this,arguments);};}();//Clear Users\nvar clearUsers=function clearUsers(){return dispatch({type:CLEAR_USERS});};//set Loading\nvar setLoading=function setLoading(){return dispatch({type:SET_LOADING});};//use provider to pass the state that whole App can use.\nreturn/*#__PURE__*/_jsx(GithubContext.Provider,{value:{users:state.users,user:state.user,repos:state.repos,loading:state.loading,searchUsers:searchUsers,clearUsers:clearUsers,getUser:getUser,getUserRepos:getUserRepos},children:props.children});};export default GithubState;","map":{"version":3,"sources":["/Users/Shared/Previously Relocated Items/Security/work /前端/web projects/github-finder/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_USER","GET_REPOS","githubClientId","githubClientSecret","process","env","NODE_ENV","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","get","res","type","payload","data","items","getUser","username","getUserRepos","clearUsers","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\nimport axios from 'axios';\nimport GithubContext from './GithubContext';\nimport GithubReducer from './GithubReducer';\nimport {\n    SEARCH_USERS,\n    SET_LOADING,\n    CLEAR_USERS,\n    GET_USER,\n    GET_REPOS\n} from '../types'\n\nlet githubClientId;\nlet githubClientSecret;\n\nif(process.env.NODE_ENV !== 'production'){\n    githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n    githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n}else{\n    githubClientId = process.env.GITHUB_CLIENT_ID;\n    githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\n}\n\nconst GithubState = (props) => {\n    const initialState = {\n        users: [],\n        user: {},\n        repos: [],\n        loading: false\n    }\n    const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n    //Search Users\n    const searchUsers = async text=>{\n        setLoading();\n\n        const res = await axios.get(\n        `https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`);\n        \n        dispatch({\n            type: SEARCH_USERS,\n            payload: res.data.items\n        });\n        }\n\n    //Get User\n        const getUser = async (username) =>{\n        setLoading();\n        const res = await axios.get(`https://api.github.com/users/${username}?client_id\n        =${githubClientId}&client_secret=${githubClientSecret}`);\n        \n        dispatch({\n            type:GET_USER,\n            payload: res.data\n        })\n    }\n    //Get Repos\n        const getUserRepos = async (username) =>{\n            \n            setLoading()\n            const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&\n            sort=created:asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`);\n            //res.data for the single user\n            \n            dispatch({\n                type: GET_REPOS,\n                payload: res.data\n            })\n         }\n\n        //Clear Users\n        const clearUsers = () => dispatch({type: CLEAR_USERS})\n\n        //set Loading\n        const setLoading = () => dispatch({type: SET_LOADING})\n        \n        //use provider to pass the state that whole App can use.\n        return <GithubContext.Provider\n            value = {{\n                users:state.users,\n                user: state.user,\n                repos: state.repos,\n                loading: state.loading,\n                searchUsers,\n                clearUsers,\n                getUser,\n                getUserRepos\n            }}>{props.children}</GithubContext.Provider>\n}\n\nexport default GithubState;"]},"metadata":{},"sourceType":"module"}